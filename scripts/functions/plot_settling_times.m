function plot_settling_times(U_inf)
    data_dir = ['C:\Users\mande\OneDrive - USNH\Documents\' ...
        'Axial Flow Turbine Test Bed\Data\Settling Times']; 
    suffix = '.dat'; % file type
    
    data_info = dir(fullfile(data_dir, ['*', suffix]));
    names = {data_info.name};
    
    full_names = fullfile(data_dir, names);
    settling_data = struct();

    for i = 1 : length(full_names)
        % convert to string
        path_to_str = char(full_names(i));
        test_name = erase(full_names(i), [data_dir + "\" ".dat" "."]);
        test_name = string(test_name);
        % read in .dat file 
    
        run_data = readmatrix(path_to_str);
        settling_data.("run_" + test_name + '_time') = run_data(:, 1) * ...
            (1 / 200);
        [settling_data.("run_" + test_name + '_xvel'), ~, ~, ~] = ...
            stdev_n(run_data(:, 3), 4, 4);
    end
    
    for i = 1 : length(full_names)
        % convert to string
        test_name = erase(full_names(i), [data_dir + "\" ".dat" "."]);
        test_name = string(test_name);
    
        settling_data.("run_" + test_name + "_xvel_movmean") = ...
            movmean(settling_data.("run_" + test_name + '_xvel'), 1200, ...
            'omitnan');
    
        settling_data.("run_" + test_name + "_xvel_movstd") = ...
            movstd(settling_data.("run_" + test_name + '_xvel'), 1200, ...
            'omitnan');
    
        % settling_data.("run_" + test_name + "_I_x") = ...
        %     settling_data.("run_" + test_name + "_xvel_movstd") ./ ...
        %     settling_data.("run_" + test_name + "_xvel_movmean");
        % 
        % settling_data.("run_" + test_name + "_U") = ...
        %     abs(settling_data.("run_" + test_name + "_I_x") / ...
        %     sqrt(settling_data.("run_" + test_name + 
        % '_xvel_nstar'))) * 100;
        % 
        % settling_data.("run_" + test_name + "_u") = ...
        %     100 * sqrt(2 / settling_data.("run_" + test_name + 
        % '_xvel_nstar'));
    end

    vels = ["0.4", "0.6", "0.8", "1.0", "1.2", "1.4", "1.6", "1.8", ...
        "2.0"];
    old_times = [120, 150, 180, 240, 300, 360, 480, 520, 560];
    new_times = [120, 150, 180, 240, 260, 280, 320, 360, 400];

    j = find(vels == U_inf);
    U_inf = string(erase(U_inf, '.'));

    shadedErrorBar(settling_data.("run_" + U_inf + "_1_time"), ...
        settling_data.("run_" + U_inf + "_1_xvel_movmean"), ...
        settling_data.("run_" + U_inf + "_1_xvel_movmean") ...
        * (0.5 / 100) + (1 / 1000), 'lineProps', ...
        {'DisplayName', '\lambda = 1', 'Color', [34 148 156] / 255, ...
        'LineWidth', 1})
    hold on

    shadedErrorBar(settling_data.("run_" + U_inf + "_4_time"), ...
        settling_data.("run_" + U_inf + "_4_xvel_movmean"),  ...
        settling_data.("run_" + U_inf + "_4_xvel_movmean") ...
        * (0.5 / 100) + (1 / 1000), 'lineProps', ...
        {'DisplayName', '\lambda = 4', 'Color', [188 196 37] / 255, ...
        'LineWidth', 1}) 
    hold on

    shadedErrorBar(settling_data.("run_" + U_inf + "_8_time"), ...
        settling_data.("run_" + U_inf + "_8_xvel_movmean"), ...
        settling_data.("run_" + U_inf + "_8_xvel_movmean") ...
        * (0.5 / 100) + (1 / 1000), 'lineProps', ...
        {'DisplayName', '\lambda = 8', 'Color', [150 53 84] / 255, ...
        'LineWidth', 1}) 
    hold on 

    xline(old_times(j), '--r', 'LineWidth', 1, 'DisplayName', ...
        'CFT Settling Time')
    xline(new_times(j), '--k', 'LineWidth', 1, 'DisplayName', ...
        'AFT Settling Time')
    
    title('U_\infty = ' + vels(j) + ' [ms^{-1}]')
    % ylabel('u [ms^{-1}]')
    % xlabel('Time [s]')
    xlim([0 old_times(j) + 5])
    grid on
end
